[{"/Users/joelandmeg/Documents/GitHub/chess-v2/src/index.tsx":"1","/Users/joelandmeg/Documents/GitHub/chess-v2/src/reportWebVitals.ts":"2","/Users/joelandmeg/Documents/GitHub/chess-v2/src/App.tsx":"3","/Users/joelandmeg/Documents/GitHub/chess-v2/src/styles/global.ts":"4","/Users/joelandmeg/Documents/GitHub/chess-v2/src/components/ChessBoard.tsx":"5","/Users/joelandmeg/Documents/GitHub/chess-v2/src/components/Square.tsx":"6","/Users/joelandmeg/Documents/GitHub/chess-v2/src/services/getPieceImage.ts":"7","/Users/joelandmeg/Documents/GitHub/chess-v2/src/hooks/useGameState.ts":"8","/Users/joelandmeg/Documents/GitHub/chess-v2/src/services/getNextBestMove.ts":"9"},{"size":478,"mtime":1611451043404,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":1611450550015,"results":"12","hashOfConfig":"11"},{"size":2683,"mtime":1640351360688,"results":"13","hashOfConfig":"11"},{"size":993,"mtime":1611451008413,"results":"14","hashOfConfig":"11"},{"size":228,"mtime":1640350900777,"results":"15","hashOfConfig":"11"},{"size":2509,"mtime":1640351604618,"results":"16","hashOfConfig":"11"},{"size":7817,"mtime":1640349319617,"results":"17","hashOfConfig":"11"},{"size":1683,"mtime":1640351048914,"results":"18","hashOfConfig":"11"},{"size":866,"mtime":1640396272606,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1nwds8x",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/joelandmeg/Documents/GitHub/chess-v2/src/index.tsx",[],["40","41"],"/Users/joelandmeg/Documents/GitHub/chess-v2/src/reportWebVitals.ts",[],"/Users/joelandmeg/Documents/GitHub/chess-v2/src/App.tsx",[],"/Users/joelandmeg/Documents/GitHub/chess-v2/src/styles/global.ts",[],"/Users/joelandmeg/Documents/GitHub/chess-v2/src/components/ChessBoard.tsx",[],"/Users/joelandmeg/Documents/GitHub/chess-v2/src/components/Square.tsx",[],"/Users/joelandmeg/Documents/GitHub/chess-v2/src/services/getPieceImage.ts",[],"/Users/joelandmeg/Documents/GitHub/chess-v2/src/hooks/useGameState.ts",["42"],"import { Square } from \"chess.js\";\nimport { useContext } from \"react\";\nimport { GameStatusContext } from \"../App\";\nimport { getPieceImage } from \"../services/getPieceImage\";\n\nexport const useGameState = (\n  square: Square\n): {\n  squareIsSelected: boolean;\n  squareEnabled: boolean;\n  onSelectSquare: () => void;\n  isPrevSquare: boolean;\n  isCurrentMovedSquare: boolean;\n  pieceImage?: string | null;\n} => {\n  const { selectedSquare, selectSquare, move, lastMove, pieceMap, validMoves } =\n    useContext(GameStatusContext);\n\n  const piece = pieceMap?.[square];\n  const pieceImage = piece && getPieceImage(piece);\n  const squareIsSelected = selectedSquare === square;\n  const possibleSelection = validMoves.find((validMove) => {\n    return validMove.from === square && validMove.color === \"w\";\n  });\n  const availableMove = validMoves.find((validMove) => {\n    return validMove.to === square && validMove.from === selectedSquare;\n  });\n  const squareEnabled =\n    square === selectedSquare\n      ? true\n      : !selectedSquare\n      ? !!possibleSelection\n      : !!availableMove;\n\n  return {\n    squareIsSelected,\n    squareEnabled,\n    isPrevSquare: false,\n    isCurrentMovedSquare: false,\n    // isPrevSquare:\n    //   `${lastMove?.prevFile}${lastMove?.prevRank}` === currentSquareId,\n    // isCurrentMovedSquare:\n    //   `${lastMove?.postFile}${lastMove?.postRank}` === currentSquareId,\n    pieceImage,\n    onSelectSquare: () => {\n      if (selectedSquare === square) {\n        selectSquare(null);\n      } else if (!selectedSquare) {\n        selectSquare(square);\n      } else if (availableMove) {\n        move(availableMove);\n      } else {\n        // TODO\n      }\n    },\n  };\n};\n","/Users/joelandmeg/Documents/GitHub/chess-v2/src/services/getNextBestMove.ts",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":16,"column":47,"nodeType":"49","messageId":"50","endLine":16,"endColumn":55},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"@typescript-eslint/no-unused-vars","'lastMove' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]